# his file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Variable sets
set $mod Mod1
set $ms Mod4

#############################
# COLORS
#############################
set $c_first    #111111dd
set $c_second   #efefefdd
set $c_third    #232323dd
set $c_third_l  #3a3a3add
set $c_fourth   #c91808dd
set $c_fourth_l #e52312dd
set $c_fifth    #0ba4c6dd
set $c_active   #ffffffff
set $c_fifth_l  #0fb4d8dd
set $c_border   #111111dd

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod


# start dmenu (a program launcher)
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec rofi -modi drun,run -show drun
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

bindsym $mod+d exec rofi -show run -config ~/.config/rofi/config.rasi

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
# bindsym $mod+Left focus left
# bindsym $mod+Down focus down
# bindsym $mod+Up focus up
# bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in horizontal orientation
bindsym $mod+' split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+c focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.

# set $ws1 "1:"
# set $ws2 "2:"
# set $ws3 "3:"
# set $ws4 "4:"
# set $ws5 "5:"
# set $ws6 "6:ﴣ"
# set $ws7 "7:"
# set $ws8 "8:"
# set $ws9 "9:"
# set $ws10 "10:聾"

set $ws1 "1:tty"
set $ws2 "2:dev"
set $ws3 "3:www"
set $ws4 "4:git"
set $ws5 "5:docs"
set $ws6 "6:disc"
set $ws7 "7:vbox"
set $ws8 "8:etc"
set $ws9 "9:mail"
set $ws10 "10:keepass"

bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Disable window titlebars entirely
for_window [class="^.*"] border pixel 2

# Set inner/outer gaps
gaps inner 10
gaps outer 15

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
# smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#bar {

    #font pango:DejaVu Sans Mono, FontAwesome 12
    #position top
    #output DP-0
    #status_command i3status-rs ~/.config/i3status-rust/config.toml
    #colors {
            #separator #666666
            #background #222222
            #statusline #dddddd
            #focused_workspace #0088CC #0088CC #ffffff
            #active_workspace #333333 #333333 #ffffff
            #inactive_workspace #333333 #333333 #888888
            #urgent_workspace #2f343a #900000 #ffffff
        #}
#}

bar {
   # load the status bar config
   status_command i3blocks
   output DP-0

   # make the status bar support transparency (only in i3-gaps)
   # i3bar_command i3bar --transparency

   # place the bar on the top
   position bottom

   # use a different font for the bar
   font pango: FuraMono Nerd Font 10
   # font pango: Source Code Pro for Powerline 12

   # choose if you want workspace buttons
   workspace_buttons true

   # remove workspaces numbers
   strip_workspace_numbers yes

   # show the binding mode indicator
   binding_mode_indicator yes

    # Tray output
    tray_output no

}


bar  {
    position bottom
    output HDMI-0
    font pango: FuraMono Nerd Font 10
    strip_workspace_numbers yes
    binding_mode_indicator yes
    tray_output no
}

bar  {
    position bottom
    output DVI-D-0
    font pango: FuraMono Nerd Font 10
    strip_workspace_numbers yes
    binding_mode_indicator yes
    tray_output no
}

#bar  {
    #position bottom
    #output DP-0
    #font pango: FuraMono Nerd Font 10
    #strip_workspace_numbers yes
    #binding_mode_indicator yes
    #tray_output yes
#}


#############################
# Signals
#############################

bindsym --release Caps_Lock exec pkill -SIGRTMIN+11 i3blocks
bindsym --release Num_Lock  exec pkill -SIGRTMIN+11 i3blocks


#############################
# Starting apps
#############################

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# XFCE4 Panel
exec_always --no-startup-id xfce4-panel --disable-wm-check

# Compton
exec --no-startup-id compton -b -f

# AltTab
exec_always --no-startup-id alttab -w 1 -d 2 -font "xft:Bitstream Vera-10" -frame "#ccc"

# Polybar
# exec_always --no-startup-id $HOME/.config/polybar/launch.sh

#############################
# Custom Bindings
#############################

# Toggle bar
bindsym $mod+b bar mode toggle

# Test
# bindsym $mod+Tab [tiling workspace="__focused__"] move workspace "__reorder__"; [workspace="__reorder__"] move workspace current

# Flameshot (Screenshots)
bindsym Print       exec flameshot full
bindsym Ctrl+Print exec flameshot gui

# Change keyboard layout
bindsym $ms+u exec setxkbmap us
bindsym $ms+c exec setxkbmap ca

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3/status

# This is to fix the random pulseaudio stop working thing
bindsym $mod+p exec --no-startup-id pulseaudio -k

bindsym $mod+i exec --no-startup-id picom-trans -c -- -10
bindsym $mod+o exec --no-startup-id picom-trans -c +10

# start a terminal
bindsym $mod+Return exec kitty -e fish

# kill focused window
bindsym $mod+Shift+q kill

# switch to next wallpaper
bindsym $mod+Shift+n exec /home/strix/Scripts/pyautobg --directory /home/strix/Images/Wallpapers/

# Assigning workspaces to monitors
workspace 1 output DP-0
workspace 2 output DP-0
workspace 3 output DVI-D-0
workspace 4 output DP-0
workspace 5 output HDMI-0
workspace 6 output DVI-D-0
workspace 10 output HDMI-0

# Specific windows set floating on
for_window [class="vlc"] floating enable

